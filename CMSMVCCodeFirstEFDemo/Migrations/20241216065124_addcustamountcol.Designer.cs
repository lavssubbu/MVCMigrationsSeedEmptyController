// <auto-generated />
using System;
using CMSMVCCodeFirstEFDemo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMSMVCCodeFirstEFDemo.Migrations
{
    [DbContext(typeof(CustDbContext))]
    [Migration("20241216065124_addcustamountcol")]
    partial class addcustamountcol
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CMSMVCCodeFirstEFDemo.Models.Customer", b =>
                {
                    b.Property<int>("custId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("custId"));

                    b.Property<string>("custLoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateofbirth")
                        .HasColumnType("datetime2");

                    b.HasKey("custId");

                    b.ToTable("customers");

                    b.HasData(
                        new
                        {
                            custId = 1,
                            custLoc = "Chennai",
                            custName = "Reena",
                            dateofbirth = new DateTime(2000, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            custId = 2,
                            custLoc = "Pune",
                            custName = "Riyaz",
                            dateofbirth = new DateTime(2001, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CMSMVCCodeFirstEFDemo.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<decimal?>("CustAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("CustId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.HasIndex("CustId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustId = 2,
                            OrderDate = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductName = "Laptop"
                        });
                });

            modelBuilder.Entity("CMSMVCCodeFirstEFDemo.Models.Order", b =>
                {
                    b.HasOne("CMSMVCCodeFirstEFDemo.Models.Customer", "customer")
                        .WithMany("orders")
                        .HasForeignKey("CustId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("CMSMVCCodeFirstEFDemo.Models.Customer", b =>
                {
                    b.Navigation("orders");
                });
#pragma warning restore 612, 618
        }
    }
}
